@model  lavAspMvclast.ViewModels.TaskPageModel

@{
    ViewData["Title"] = "Index";
}

<form method="get">
    <div class="form-inline form-group">
    <label class="control-label"> Name </label>   
    @Html.TextBox("Name",Model.Name,htmlAttributes:new{@class="form-control"})
    <label class="control-label"> By Word in Description </label>   
    @Html.TextBox("WordInDescription",Model.WordInDescription,htmlAttributes:new{@class="form-control"})
    <label class="control-label"> Status </label>   
    @Html.TextBox("Status",Model.Status,htmlAttributes:new{@class="form-control"})
    <label class="control-label"> Priority </label>   
    @Html.TextBox("Priority",Model.Priority,htmlAttributes:new{@class="form-control"})
    <label class="control-label"> From date </label>   
    <input asp-for="@Model.Form" name="From" class="form-control" />
    <label class="control-label"> To date </label>   
    <input asp-for="@Model.To" name="To" class="form-control" />
    <input type="submit" value="filter" class="btn btn-outline-danger" />
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
               <p>#</p>
            </th>
            <th>
              <a asp-action="Index" asp-route-sortOrder="@ViewBag.NameSort"> Name</a>
            </th>
            <th>
               <p>Description</p>
            </th>
            <th>
               <a asp-action="Index" asp-route-sortOrder="@ViewBag.PrioritySort"> Priority</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.DateSort"> Date created</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewBag.StatusSort"> Status</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.ToDoTasks) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                    @if (item.Priority == 1)
                    {
                       <p>low</p>
                    }
                    @if (item.Priority == 2)
                    {
                       <p>Mid</p>
                    }
                    @if (item.Priority == 3)
                    {
                       <p>High</p>
                    }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateCreated)
            </td>
            <td>
               @if (item.Status == 1)
                    {
                       <p>New</p>
                    }
                    @if (item.Status == 2)
                    {
                       <p>Open</p>
                    }
                    @if (item.Status == 3)
                    {
                       <p>Close</p>
                    }
            </td>
            <td>
                    @if (item.Status == 1)
                    {
                         <a asp-action="Open" asp-controller="ToDoTasks" asp-route-id="@item.Id">Open  |</a> 
                <a asp-action="Details" asp-route-id="@item.Id">Details  |</a> 
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                     @if (item.Status == 2)
                    {
                         <a asp-action="Close" asp-controller="ToDoTasks" asp-route-id="@item.Id">Close  |</a> 
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> 
                    }
                     @if (item.Status == 3)
                    {
                <a asp-action="Details" asp-route-id="@item.Id">Details  |</a> 
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }

            </td>
        </tr>
}
    </tbody>
</table>
@if(Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumber-1)" class="btn btn-outline-dark"><i class="glyphicon glyphicon-chevron-left">previous</i></a>
}
@if (Model.PageViewModel.HasNextPage)
{
   <a asp-action="Index" asp-route-page="@(Model.PageViewModel.PageNumber+1)" class="btn btn-outline-dark"><i class="glyphicon glyphicon-chevron-right">next</i></a>  
}
